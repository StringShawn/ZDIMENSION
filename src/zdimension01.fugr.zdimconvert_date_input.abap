FUNCTION ZDIMCONVERT_DATE_INPUT.
*"----------------------------------------------------------------------
*"*"Local interface:
*"  IMPORTING
*"     REFERENCE(VALUE) TYPE  ALSMEX_TABLINE-VALUE
*"     REFERENCE(ZDIMDATFM) TYPE  ZDIMDATFM
*"  EXPORTING
*"     REFERENCE(OUTPUT) TYPE  SY-DATUM
*"  EXCEPTIONS
*"      WRONG_FORMAT_IN_INPUT
*"----------------------------------------------------------------------
  data: NUM(11) TYPE C VALUE '0123456789 ',
        DATE_MASK(10) TYPE C VALUE '__________',
        DATE_SEP(1)     TYPE C,
        LENGTH TYPE P,
        YEAR(4) TYPE C,
        MONTH(2) TYPE C,
        DAY(2) TYPE C,
        VALUE02 type ALSMEX_TABLINE-VALUE.
  data:   BEGIN OF DATE_CHAR,
            NUM(11) TYPE C VALUE '0123456789 ',
            SEP(1)  TYPE C,
          END OF DATE_CHAR.
clear output.
*check if a char is wrong in date
  if ZDIMDATFM eq '' or ZDIMDATFM eq 'A'.
    clear DATE_SEP.
    IF VALUE CN NUM.
      MESSAGE S012(S5) WITH DATE_SEP RAISING WRONG_FORMAT_IN_INPUT.
    ENDIF.
  elseif ZDIMDATFM eq '1' or  ZDIMDATFM eq '4' or ZDIMDATFM eq '7' .
    DATE_SEP = '.'.
    DATE_CHAR-SEP = '.'.
    IF VALUE CN DATE_CHAR.
      MESSAGE S012(S5) WITH DATE_SEP RAISING WRONG_FORMAT_IN_INPUT.
    endif.
  elseif ZDIMDATFM eq '2' or  ZDIMDATFM eq '5' or ZDIMDATFM eq '8' .
    DATE_SEP = '/'.
    DATE_CHAR-SEP = '/'.
    IF VALUE CN DATE_CHAR.
      MESSAGE S012(S5) WITH DATE_SEP RAISING WRONG_FORMAT_IN_INPUT.
    endif.
  elseif ZDIMDATFM eq '3' or  ZDIMDATFM eq '6' or ZDIMDATFM eq '9' .
    DATE_SEP = '-'.
    DATE_CHAR-SEP = '-'.
    IF VALUE CN DATE_CHAR.
      MESSAGE S012(S5) WITH DATE_SEP RAISING WRONG_FORMAT_IN_INPUT.
    endif.
  endif.
* check if length of INPUT is wrong
  LENGTH = STRLEN( VALUE ).
  IF LENGTH GT 10
  OR LENGTH LT 5.
    MESSAGE S001 WITH DATE_MASK RAISING WRONG_FORMAT_IN_INPUT.
  ENDIF.
  CLEAR DAY.
  CLEAR MONTH.
  CLEAR YEAR.
  CASE ZDIMDATFM.
    WHEN '1' OR '2' OR '3'.  "DD.MM.YYYY OR DD/MM/YYYY  OR DD-MM-YYYY
      SPLIT VALUE AT DATE_SEP INTO DAY MONTH YEAR.
      CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
        EXPORTING
          INPUT  = DAY
        IMPORTING
          OUTPUT = DAY.
      CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
        EXPORTING
          INPUT  = MONTH
        IMPORTING
          OUTPUT = MONTH.
      CONCATENATE YEAR MONTH DAY INTO OUTPUT.
    WHEN '4' OR '5' OR '6'. "MM.DD.YYYY OR  MM/DD/YYYY  OR MM-DD-YYYY
      SPLIT VALUE AT DATE_SEP INTO MONTH DAY YEAR.
      CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
        EXPORTING
          INPUT  = DAY
        IMPORTING
          OUTPUT = DAY.
      CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
        EXPORTING
          INPUT  = MONTH
        IMPORTING
          OUTPUT = MONTH.
      CONCATENATE YEAR MONTH DAY INTO OUTPUT.
    WHEN '7' OR '8' OR '9'.
      SPLIT VALUE AT DATE_SEP INTO YEAR MONTH DAY.
      CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
        EXPORTING
          INPUT  = DAY
        IMPORTING
          OUTPUT = DAY.
      CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
        EXPORTING
          INPUT  = MONTH
        IMPORTING
          OUTPUT = MONTH.
      CONCATENATE YEAR MONTH DAY INTO OUTPUT.
    WHEN 'A' OR '' .
      OUTPUT = VALUE.
  ENDCASE.


ENDFUNCTION.
